"""empty message

Revision ID: 09ca6df8a648
Revises: 
Create Date: 2024-10-19 14:41:14.477090

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '09ca6df8a648'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('type', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE categories SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq

    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(
                        length=40), nullable=False),
                    sa.Column('first_name', sa.String(
                        length=40), nullable=False),
                    sa.Column('last_name', sa.String(
                        length=40), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=255), nullable=False),
                    sa.Column('profile_url', sa.String(
                        length=255), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq

    op.create_table('itineraries',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('country', sa.String(), nullable=True),
                    sa.Column('duration', sa.Integer(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('preview_image_url', sa.Text(), nullable=False),
                    sa.Column('traveler_id', sa.Integer(), nullable=False),
                    sa.Column('category_id', sa.Integer(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['category_id'], ['categories.id'], ),
                    sa.ForeignKeyConstraint(['traveler_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE itineraries SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq

    op.create_table('collections',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('itinerary_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['itinerary_id'], ['itineraries.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE collections SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq

    op.create_table('reviews',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('itinerary_id', sa.Integer(), nullable=False),
                    sa.Column('review', sa.Text(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['itinerary_id'], ['itineraries.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE reviews SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq

    op.create_table('schedules',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('day', sa.String(), nullable=False),
                    sa.Column('itinerary_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['itinerary_id'], ['itineraries.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE schedules SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq

    op.create_table('activities',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('place', sa.String(), nullable=False),
                    sa.Column('longitude', sa.Float(), nullable=False),
                    sa.Column('latitude', sa.Float(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('place_image_url', sa.Text(), nullable=True),
                    sa.Column('schedule_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['schedule_id'], ['schedules.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE activities SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('activities')
    op.drop_table('schedules')
    op.drop_table('reviews')
    op.drop_table('collections')
    op.drop_table('itineraries')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
